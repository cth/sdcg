target(failure,0).
failure:-closure_success0(f0).
success:-sdcg(_,_,[]).
data(user).
values(tag(2),[tag_2_3,tag_2_2,tag_2_1]).
sdcg(A,B,C):-tag(none,A,B,C,0).
tag(A,B,C,D,E):-
    incr_depth(E,F),
    msw(tag(2),G),
    sdcg_rule(G,A,B,C,D,F).
sdcg_rule(tag_2_3,none,[none|A],B,C,D):-consume(B,alpha,E),tag(@brown_tag(_),A,E,C,D).
sdcg_rule(tag_2_2,none,[none|A],B,C,D):-consume(B,beta,E),tag(@brown_tag(_),A,E,C,D).
sdcg_rule(tag_2_1,none,[none|A],B,C,D):-consume(B,gamma,E),tag(@brown_tag(_),A,E,C,D).
ap([],A,B):-B=A.
ap([A|B],C,[A|D]):-ap(B,C,D).
consume(A,B,C):-ap([B],C,A).
all([A],cont(A,B)):-cont(A,B).
incr_depth(A,B):-
    integer(A),
    B is A+1,
    B<10.
word_l([A]):-brown_word(A).
sdcg_user_option(prism_invoker,prism).
brown_tag(none).
brown_word(alpha).
brown_word(beta).
brown_word(gamma).
cont(A,f3(B,C,D)):-msw(tag(2),E),closure_sdcg_rule0(E,B,C,A,D).
cont(A,f6(_)):- \+A= @brown_tag(_).
cont(A,f5(B,C,D)):-closure_tag1(A,B,C,f6(D)).
cont(A,f8(_)):- \+A= @brown_tag(_).
cont(A,f7(B,C,D)):-closure_tag1(A,B,C,f8(D)).
cont(A,f10(_)):- \+A= @brown_tag(_).
cont(A,f9(B,C,D)):-closure_tag1(A,B,C,f10(D)).
cont(A,f12(B,C,D)):-msw(tag(2),E),closure_sdcg_rule1(E,B,C,A,D).
cont(A,f16(_)):- \+A= @brown_tag(_).
cont(@brown_tag(_),f16(A)):-cont(none,A).
cont(A,f15(B,C,D)):-closure_tag1(A,B,C,f16(D)).
cont(A,f18(_)):- \+A= @brown_tag(_).
cont(@brown_tag(_),f18(A)):-cont(none,A).
cont(A,f17(B,C,D)):-closure_tag1(A,B,C,f18(D)).
cont(A,f20(_)):- \+A= @brown_tag(_).
cont(@brown_tag(_),f20(A)):-cont(none,A).
cont(A,f19(B,C,D)):-closure_tag1(A,B,C,f20(D)).
closure_success0(A):-closure_sdcg0([],A).
closure_sdcg0(A,B):-closure_tag0(none,A,0,B).
closure_tag0(A,B,C,D):-closure_incr_depth0(C,f3(A,B,D)).
closure_incr_depth0(A,B):-
    (
        \+integer(A)
    ;
        integer(A),
        C is A+1,
        (
            C<10,
            cont(C,B)
        ;
            C>=10
        )
    ).
closure_sdcg_rule0(A,B,C,D,E):-
    (
        \+A=tag_2_3
    ;
        A=tag_2_3,
        \+B=none
    ;
        A=tag_2_3,
        B=none,
        closure_consume0(alpha,f5(C,D,E))
    ),
    (
        \+A=tag_2_2
    ;
        A=tag_2_2,
        \+B=none
    ;
        A=tag_2_2,
        B=none,
        closure_consume0(beta,f7(C,D,E))
    ),
    (
        \+A=tag_2_1
    ;
        A=tag_2_1,
        \+B=none
    ;
        A=tag_2_1,
        B=none,
        closure_consume0(gamma,f9(C,D,E))
    ).
closure_consume0(A,B):-closure_ap0([A],B).
closure_tag1(A,B,C,D):-closure_incr_depth0(C,f12(A,B,D)).
closure_ap0(A,B):-
    (
        \+A=[]
    ;
        A=[],
        all([C],cont(C,B))
    ),
    (
        \+A=[D|E]
    ;
        A=[D|E],
        closure_ap0(E,B)
    ).
closure_sdcg_rule1(A,B,C,D,E):-
    (
        \+A=tag_2_3
    ;
        A=tag_2_3,
        closure_consume1(B,alpha,f15(C,D,E))
    ),
    (
        \+A=tag_2_2
    ;
        A=tag_2_2,
        closure_consume1(B,beta,f17(C,D,E))
    ),
    (
        \+A=tag_2_1
    ;
        A=tag_2_1,
        closure_consume1(B,gamma,f19(C,D,E))
    ).
closure_consume1(A,B,C):-closure_ap1([B],A,C).
closure_ap1(A,B,C):-
    (
        \+A=[]
    ;
        A=[],
        cont(B,C)
    ),
    (
        \+A=[D|E]
    ;
        A=[D|E],
        \+B=[D|F]
    ;
        A=[D|E],
        B=[D|F],
        closure_ap1(E,F,C)
    ).
